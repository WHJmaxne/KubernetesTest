#!groovy
pipeline{
    agent any
    environment{
        PRO_NAME="KubernetesTest"
        CHART_DIR="KubernetesTest/charts/kubernetestest/"
        CHART_NAME="kubernetestest"
        K8S_NAMESPACE="default"
        K8S_NAME="test-k8s"

        IMAGE_HUB="whjmaxne"
        IMAGE_NAME="kubernetestest"
        TAG_1=sh(returnStdout: true,script: 'date "+%Y%m%d%H%M"').trim()
        TAG_2=sh(returnStdout: true,script: 'git log -1 --pretty=format:"%h"').trim()
        IMAGE_TAG="${TAG_1}_${TAG_2}"
    }
    stages{
        stage('docker build'){
            steps{
                echo "start docker build ${IMAGE_HUB}/${IMAGE_NAME}:${IMAGE_TAG}"
                sh "docker build -t ${IMAGE_HUB}/${IMAGE_NAME}:${IMAGE_TAG} -f ${PRO_NAME}/Dockerfile ."
            }
        }
        stage('docker push'){
            steps{
                echo "start docker push ${IMAGE_HUB}/${IMAGE_NAME}:${IMAGE_TAG}"
                sh "docker push ${IMAGE_HUB}/${IMAGE_NAME}:${IMAGE_TAG}"
            }
        }

        stage('clear none images'){
            steps{
                echo "start clear none images"
                //sh label: '', script: 'docker images | grep none | awk \'{print $3}\' | xargs docker rmi'
            }
        }
        stage('helm deploy'){
            steps{
                echo "start helm deploy"
                sh "kubectl config use-context ${K8S_NAME}"
                sh "sed -i 's/latest/${IMAGE_TAG}/' ${CHART_DIR}Chart.yaml"
                sh "cat ${CHART_DIR}Chart.yaml"
                sh "helm install ${CHART_NAME} ${CHART_DIR} -n ${K8S_NAMESPACE}"
            }
        }
    }
}